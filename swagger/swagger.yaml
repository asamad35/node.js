openapi: 3.0.0
info:
  title: SwaggerDocs
  description: Learning swagger docs.
  version: 1.1.0.
  contact:
    email: samad.abdus3535@gmail.com
    url: https://asamadportfolio.netlify.app/

# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: this is local server

#   - url: "https://localhost:4000/api/v1"
#     description: this is production server

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: This is {security}

    variables:
      version:
        enum:
          - v1
          - v2
        default: v1

      protocol:
        enum:
          - http
          - https
        default: http

      security:
        enum:
          - insecure
          - secure
        default: insecure

components:
  securitySchemes:
    BasicAuth:
      type: apiKey
      in: cookie
      scheme: basic

    BearerAuth:
      type: http
      scheme: bearer

paths:
  /lco:
    get:
      tags:
        - String
      summary: returns a greet message from LCO
      responses:
        200:
          description: all good success
          content:
            application/json:
              schema:
                type: "string"
                example: "mystring"
        400:
          description: bad request
        500:
          description: internal server error

  /courses:
    get:
      tags:
        - Array
      summary: Courses that I am learning
      responses:
        200:
          description: all good success
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
                    validity:
                      type: string
        400:
          description: bad request
        500:
          description: internal server error

  /mycourse/{courseId}:
    get:
      tags:
        - String
      summary: Return course based on id
      parameters:
        - name: courseId
          in: path
          required: true
          default: 1
          schema:
            type: string

      responses:
        200:
          description: all good success
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
                  validity:
                    type: string
        400:
          description: bad request
        500:
          description: internal server error

  /addCourses:
    post:
      tags:
        - String
      summary: add course to existing courses
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
                validity:
                  type: string
      responses:
        200:
          description: all good success
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: bad request
        500:
          description: internal server error

  /courseQuery:
    get:
      tags:
        - String
      summary: returns courses on the basis of query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: ["Delhi", "Jaipur", "Kolkata"]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: ["PC", "Laptop", "Mobile"]
      responses:
        200:
          description: all good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  device:
                    type: string
        400:
          description: bad request
        500:
          description: internal server error

  /courseUpload:
    post:
      tags:
        - String
      summary: uploading image file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                sampleFile:
                  type: string
                  format: binary
      responses:
        200:
          description: all good success
        400:
          description: bad request
        500:
          description: internal server error
